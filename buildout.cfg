[buildout]
parts = prepare debug app_lib gae_sdk gae_tools test

[prepare]
recipe = iw.recipe.cmd:py
on_install = true
cmds =
   >>> buildout_dir = buildout.get('directory', '.')
   >>> path = os.path.join(buildout_dir, 'app')
   >>> if not os.path.exists(path):
   ...     os.makedirs(os.path.join(buildout_dir, 'app'))
   ...     open(os.path.join(path, 'app.yaml'), 'at').write(
   ...     'application: appname\n'
   ...     'version: 1\n'
   ...     'runtime: python\n'
   ...     'api_version: 1\n'
   ...     'handlers:\n'
   ...     '- url: .*\n'
   ...     '  script: main.py\n'
   ...     )
   ...     open(os.path.join(path, 'main.py'), 'at').write(
   ...     """import sys; sys.path.insert(0, './distlib.zip')""")

[debug]
recipe = zc.recipe.egg:script
eggs = ipython
extra-paths =
    ${gae_tools:extra-paths}
    ${gae_tools:sdk-directory}/lib/django
    ${gae_tools:sdk-directory}/lib/webob
    ${gae_tools:sdk-directory}/lib/yaml/lib
    ${buildout:directory}/app
interpreter = py

[app_lib]
recipe = appfy.recipe.gae:app_lib
lib-directory = app/distlib
use-zipimport = true

allowed-eggs-from-site-packages =
    PIL
eggs =
    blockdiag
    blockdiagcontrib-square
    seqdiag
    funcparserlib

ignore-globs =
    *.c
    *.pyc
    *.pyo
    */test
    */tests
    */testsuite
    */django
    */sqlalchemy
    simplejson/_speedups.py

ignore-packages =
    distribute
    setuptools
    easy_install
    site
    pkg_resources


[gae_sdk]
recipe = appfy.recipe.gae:sdk
url = http://googleappengine.googlecode.com/files/google_appengine_1.4.2.zip
clear-destination = true


[gae_tools]
recipe = appfy.recipe.gae:tools
sdk-directory = ${gae_sdk:destination}/google_appengine
extra-paths =
    app/lib
    app/distlib.zip


[test]
recipe = pbp.recipe.noserunner
eggs =
    ${app_lib:eggs}
    nose
    nosegae
extra-paths = ${debug:extra-paths}
environment = nose-environment
defaults = --gae-application=${buildout:directory}/app

[nose-environment]
NOSE_WITH_GAE = true
NOSE_WHERE = ${buildout:directory}/app
